{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\junki\\\\Desktop\\\\Projects\\\\memories_app\\\\client\\\\src\\\\components\\\\Navbar\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Button, Typography, Toolbar, Avatar } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport memories from '../../images/memories.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n\n  const logout = () => {};\n\n  useEffect(() => {\n    const token = user === null || user === void 0 ? void 0 : user.token;\n    setUser(JSON.parse(localStorage.getItem('profile')));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    className: classes.appBar,\n    position: \"static\",\n    color: \"inherit\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.brandContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: Link,\n        to: \"/\",\n        className: classes.heading,\n        variant: \"h2\",\n        align: \"center\",\n        children: \"Memories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.image,\n        src: memories,\n        alt: \"memories\",\n        height: \"60\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.toolbar,\n      children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.profile,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.purple,\n          alt: user.result.name,\n          src: user.result.imageUrl,\n          children: user.result.name.charAt(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.userName,\n          variant: \"h6\",\n          children: user.result.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          className: classes.logout,\n          color: \"secondary\",\n          onClick: logout,\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        component: Link,\n        to: \"/auth\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"uFR9Pi5dbn8eWyWbhmQ5ectLQv0=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/junki/Desktop/Projects/memories_app/client/src/components/Navbar/Navbar.js"],"names":["React","useState","useEffect","Link","AppBar","Button","Typography","Toolbar","Avatar","useDispatch","useStyles","memories","Navbar","classes","dispatch","user","setUser","JSON","parse","localStorage","getItem","logout","token","appBar","brandContainer","heading","image","toolbar","profile","purple","result","name","imageUrl","charAt","userName"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {AppBar, Button, Typography, Toolbar, Avatar} from '@material-ui/core';\r\nimport {useDispatch} from 'react-redux';\r\nimport useStyles from './styles';\r\nimport memories from '../../images/memories.png';\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  \r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n\r\n  const logout = () => {\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    setUser(JSON.parse(localStorage.getItem('profile')))\r\n  }, []);\r\n\r\n  return (\r\n    <AppBar className={classes.appBar} position='static' color='inherit'>\r\n      <div className={classes.brandContainer}>\r\n       <Typography component={Link} to='/' className={classes.heading} variant='h2' align='center'>Memories</Typography>\r\n       <img className={classes.image} src={memories} alt=\"memories\" height='60'></img>\r\n      </div>   \r\n      <Toolbar className={classes.toolbar}>\r\n        {user ? (<div className={classes.profile}>\r\n                    <Avatar className={classes.purple} alt={user.result.name} src={user.result.imageUrl}>{user.result.name.charAt(0)}</Avatar>\r\n                    <Typography className={classes.userName} variant='h6'>{user.result.name}</Typography>\r\n                    <Button variant='contained' className={classes.logout} color='secondary' onClick={logout}>Log Out</Button>\r\n                </div>) : (\r\n                  <Button component={Link} to='/auth' variant='contained' color='primary'>Sign In</Button>\r\n                )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar\r\n"]},"metadata":{},"sourceType":"module"}