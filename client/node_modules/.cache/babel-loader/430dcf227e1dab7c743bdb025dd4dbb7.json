{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\junki\\\\Desktop\\\\Projects\\\\memories_app\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const posts = useSelector(state => currentId ? state.posts.find(p => p._id == currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n  };\n\n  const clear = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Creating a Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"5vF+qblRRMuicEH+yCdObstqPNs=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/junki/Desktop/Projects/memories_app/client/src/components/Form/Form.js"],"names":["React","useState","TextField","Button","Typography","Paper","FileBase","useSelector","useDispatch","useStyles","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","posts","state","find","p","_id","classes","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {TextField, Button, Typography, Paper} from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport {useSelector} from 'react-redux';\r\nimport {useDispatch} from 'react-redux';\r\nimport useStyles from './styles';\r\nimport {createPost, updatePost} from '../../actions/posts';\r\n\r\n\r\n\r\n\r\nconst Form = ({currentId, setCurrentId}) => {\r\n  const [postData, setPostData] = useState({creator: '', title: '', message: '', tags: '', selectedFile: ''});\r\n  const posts = useSelector((state) => currentId ? state.posts.find((p) => p._id == currentId): null);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if(currentId) {\r\n      dispatch(updatePost(currentId, postData));\r\n    } else {\r\n      dispatch(createPost(postData));\r\n    }\r\n    \r\n\r\n  };\r\n\r\n  const clear = () => {\r\n\r\n  };\r\n\r\n  return(\r\n    <Paper className={classes.paper}>\r\n      <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n        <Typography variant='h6'>Creating a Memory</Typography>\r\n        <TextField name='creator' variant='outlined' label='Creator' fullWidth value={postData.creator} onChange={(e) => setPostData({...postData, creator: e.target.value})}/>\r\n        <TextField name='title' variant='outlined' label='Title' fullWidth value={postData.title} onChange={(e) => setPostData({...postData, title: e.target.value})}/>\r\n        <TextField name='message' variant='outlined' label='Message' fullWidth value={postData.message} onChange={(e) => setPostData({...postData, message: e.target.value})}/>\r\n        <TextField name='tags' variant='outlined' label='Tags' fullWidth value={postData.tags} onChange={(e) => setPostData({...postData, tags: e.target.value})}/>\r\n        <div className={classes.fileInput}><FileBase type='file' multiple={false} onDone={({base64}) => setPostData({...postData, selectedFile: base64})} /></div>\r\n        <Button className={classes.buttonSubmit} variant='contained' color='primary' size='large' type='submit' fullWidth>Submit</Button>\r\n        <Button variant='contained' color='secondary' size='small' onClick={clear} fullWidth>Clear</Button>\r\n\r\n      </form>\r\n\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Form"]},"metadata":{},"sourceType":"module"}