{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\junki\\\\Desktop\\\\Projects\\\\memories_app\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container, Icon } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    handleShowPassword(false);\n  };\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignup ? 'Sign Up' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? 'text' : 'password',\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"GOOGLE ID\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 28\n            }, this),\n            variant: \"contained\",\n            children: \"Google Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"L/0RFYyCPsSGMEQ9PXERxKrUEQE=\", false, function () {\n  return [useStyles];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/junki/Desktop/Projects/memories_app/client/src/components/Auth/Auth.js"],"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","Icon","GoogleLogin","LockOutlinedIcon","useStyles","Input","Auth","classes","showPassword","setShowPassword","isSignup","setIsSignup","handleShowPassword","prevShowPassword","switchMode","prevIsSignup","handleSubmit","handleChange","paper","avatar","form","renderProps","googleButton","onClick","disabled","submit"],"mappings":"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","sourcesContent":["import {React, useState} from 'react'\r\nimport {Avatar, Button, Paper, Grid, Typography, Container, Icon} from '@material-ui/core';\r\nimport {GoogleLogin} from 'react-google-login'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport useStyles from './styles';\r\nimport Input from './Input';\r\n\r\nconst Auth = () => {\r\n  const classes = useStyles();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isSignup, setIsSignup] = useState(false);\r\n\r\n  const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\r\n\r\n  const switchMode = () => {\r\n    setIsSignup((prevIsSignup) => ! prevIsSignup);\r\n    handleShowPassword(false);\r\n  }\r\n\r\n\r\n  const handleSubmit = () => {\r\n\r\n  };\r\n\r\n  const handleChange = () => {\r\n\r\n  };\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <Paper className={classes.paper} elevation={3}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography variant='h5'>{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}> \r\n          <Grid container spacing={2}>\r\n            {isSignup && (\r\n                <>\r\n                  <Input name='firstName' label='First Name' handleChange={handleChange} autoFocus half/>\r\n                  <Input name='lastName' label='Last Name' handleChange={handleChange} autoFocus half/>\r\n                </>\r\n              )}\r\n              <Input name='email' label='Email Address' handleChange={handleChange} type='email'/>\r\n              <Input name ='password' label='Password' handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword}/>\r\n              {isSignup && <Input name='confirmPassword' label='Repeat Password' handleChange={handleChange} type='password'/>}\r\n          </Grid>\r\n          <GoogleLogin \r\n              clientId='GOOGLE ID'\r\n              render={(renderProps) => (\r\n                <Button \r\n                className={classes.googleButton} \r\n                color='primary' \r\n                fullWidth \r\n                onClick={renderProps.onClick} \r\n                disabled={renderProps.disabled} \r\n                startIcon={<Icon />} \r\n                variant='contained'>Google Sign In</Button>\r\n              )}         \r\n          />\r\n          <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\r\n            {isSignup ? 'Sign Up' : 'Sign In'}\r\n          </Button>\r\n          <Grid container justify='center'>\r\n            <Grid item>\r\n              <Button onClick={switchMode}>\r\n                {isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n\r\n      </Paper>\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n"]},"metadata":{},"sourceType":"module"}